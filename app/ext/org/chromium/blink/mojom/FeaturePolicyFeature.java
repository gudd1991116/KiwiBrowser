
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/feature_policy/feature_policy.mojom
//

package org.chromium.blink.mojom;

import org.chromium.mojo.bindings.DeserializationException;

public final class FeaturePolicyFeature {


    public static final int NOT_FOUND = (int) (0L);

    public static final int AUTOPLAY = NOT_FOUND + 1;

    public static final int CAMERA = AUTOPLAY + 1;

    public static final int ENCRYPTED_MEDIA = CAMERA + 1;

    public static final int FULLSCREEN = ENCRYPTED_MEDIA + 1;

    public static final int GEOLOCATION = FULLSCREEN + 1;

    public static final int MICROPHONE = GEOLOCATION + 1;

    public static final int MIDI_FEATURE = MICROPHONE + 1;

    public static final int PAYMENT = MIDI_FEATURE + 1;

    public static final int SPEAKER = PAYMENT + 1;

    public static final int DOCUMENT_COOKIE = SPEAKER + 1;

    public static final int DOCUMENT_DOMAIN = DOCUMENT_COOKIE + 1;

    public static final int SYNC_SCRIPT = DOCUMENT_DOMAIN + 1;

    public static final int SYNC_XHR = SYNC_SCRIPT + 1;

    public static final int USB = SYNC_XHR + 1;

    public static final int ACCESSIBILITY_EVENTS = USB + 1;

    public static final int WEB_VR = ACCESSIBILITY_EVENTS + 1;

    public static final int ACCELEROMETER = WEB_VR + 1;

    public static final int AMBIENT_LIGHT_SENSOR = ACCELEROMETER + 1;

    public static final int GYROSCOPE = AMBIENT_LIGHT_SENSOR + 1;

    public static final int MAGNETOMETER = GYROSCOPE + 1;

    public static final int UNSIZED_MEDIA = MAGNETOMETER + 1;

    public static final int LEGACY_IMAGE_FORMATS = UNSIZED_MEDIA + 1;

    public static final int IMAGE_COMPRESSION = LEGACY_IMAGE_FORMATS + 1;

    public static final int ANIMATIONS = IMAGE_COMPRESSION + 1;

    public static final int MAX_DOWNSCALING_IMAGE = ANIMATIONS + 1;

    public static final int PICTURE_IN_PICTURE = MAX_DOWNSCALING_IMAGE + 1;

    public static final int VERTICAL_SCROLL = PICTURE_IN_PICTURE + 1;

    public static final int DOCUMENT_STREAM_INSERTION = VERTICAL_SCROLL + 1;


    private static final boolean IS_EXTENSIBLE = false;

    public static boolean isKnownValue(int value) {
        switch (value) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
                return true;
        }
        return false;
    }

    public static void validate(int value) {
        if (IS_EXTENSIBLE || isKnownValue(value))
            return;

        throw new DeserializationException("Invalid enum value.");
    }

    private FeaturePolicyFeature() {}

}